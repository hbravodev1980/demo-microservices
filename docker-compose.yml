version: '3'
services:
  # Postgres database for Inventories
  db-inventories:
    container_name: db-inventories
    image: postgres:16.0
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_inventories
      POSTGRES_USER: hbravo
      POSTGRES_PASSWORD: test123
    ports:
      - 5432:5432

  # MySQL database for Orders
  db-orders:
    container_name: db-orders
    image: mysql:8.1.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ms_orders
      MYSQL_USER: hbravo
      MYSQL_PASSWORD: test123
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306

  # Postgres database for Products
  db-products:
    container_name: db-products
    image: postgres:16.0
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_products
      POSTGRES_USER: hbravo
      POSTGRES_PASSWORD: test123
    ports:
      - 5433:5432

  # Postgres database for Keycloak
  db-keycloak:
    container_name: db-keycloak
    image: postgres:16.0
    restart: unless-stopped
    environment:
      POSTGRES_DB: db_keycloak
      POSTGRES_USER: hbravo
      POSTGRES_PASSWORD: test123
    ports:
      - 5434:5432

  # keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.4
    command: ["start-dev"]
    ports:
      - 8181:8080
    depends_on:
      - db-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: db-keycloak
      KC_DB_URL_DATABASE: db_keycloak
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: hbravo
      KC_DB_PASSWORD: test123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  # Zookeeper
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# Zipkin
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:2.24.3
    ports:
      - "9411:9411"

# Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    volumes:
      - ./files/prometheus.yml:/etc/prometheus/prometheus.yml

# Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:10.2.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - prometheus
    volumes:
      - ./files/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    depends_on:
      - prometheus